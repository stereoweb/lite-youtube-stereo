{"version":3,"file":"lite-youtube.test.js","sourceRoot":"","sources":["lite-youtube.test.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable import/no-duplicates */\nimport { html, fixture, expect } from '@open-wc/testing';\nimport { fixtureCleanup } from '@open-wc/testing-helpers';\n\nimport { setViewport } from '@web/test-runner-commands';\n\nimport { LiteYTEmbed } from '../lite-youtube.js';\nimport '../lite-youtube.js';\n\nconst baseTemplate = html`<lite-youtube\n  videoTitle=\"Test Me\"\n  videoid=\"guJLfqTFfIw\"\n></lite-youtube>`;\n\ndescribe('<lite-youtube>', () => {\n  afterEach(() => {\n    fixtureCleanup();\n  });\n\n  it('attr sets the videoid', async () => {\n    const el = await fixture<LiteYTEmbed>(baseTemplate);\n    expect(el.videoId).to.equal('guJLfqTFfIw');\n  });\n\n  it('dynamic setter for videoid', async () => {\n    const el = await fixture<LiteYTEmbed>(baseTemplate);\n    el.videoId = 'tests';\n    expect(el.videoId).to.equal('tests');\n  });\n\n  it('videoTitle set/get', async () => {\n    const el = await fixture<LiteYTEmbed>(baseTemplate);\n    expect(el.videoTitle).to.equal('Test Me');\n    el.videoTitle = 'Test Me Again';\n    expect(el.videoTitle).to.equal('Test Me Again');\n    expect(el.title).to.equal('Play: Test Me Again');\n  });\n\n  it('videoPlay set/get', async () => {\n    const el = await fixture<LiteYTEmbed>(baseTemplate);\n    expect(el.videoPlay).to.equal('Play');\n    el.videoPlay = 'Run';\n    expect(el.videoPlay).to.equal('Run');\n    expect(el.title).to.equal('Run: Test Me');\n  });\n\n  it('videoTitle set/get attr', async () => {\n    const el = await fixture<LiteYTEmbed>(baseTemplate);\n    expect(el.videoTitle).to.equal('Test Me');\n    el.setAttribute('videotitle', 'Test Me Again');\n    expect(el.videoTitle).to.equal('Test Me Again');\n    expect(el.title).to.equal('Play: Test Me Again');\n  });\n\n  it('videoPlay set/get attr', async () => {\n    const el = await fixture<LiteYTEmbed>(baseTemplate);\n    expect(el.videoPlay).to.equal('Play');\n    el.setAttribute('videoplay', 'Run');\n    expect(el.videoPlay).to.equal('Run');\n    expect(el.title).to.equal('Run: Test Me');\n  });\n\n  it('clicking button should load iframe', async () => {\n    const el = await fixture<LiteYTEmbed>(baseTemplate);\n    expect(el.shadowRoot.querySelector('iframe')).to.be.null;\n    el.click();\n    expect(el.shadowRoot.querySelector('iframe')).dom.to.equal(\n      '<iframe frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" src=\"https://www.youtube.com/embed/guJLfqTFfIw?autoplay=1&amp;start=0&amp;null\" title=\"Test Me\"></iframe>'\n    );\n  });\n\n  it('switching videoid should reset iframe', async () => {\n    const el = await fixture<LiteYTEmbed>(baseTemplate);\n    expect(el.shadowRoot.querySelector('iframe')).to.be.null;\n    el.click();\n    expect(el.shadowRoot.querySelector('iframe')).dom.to.equal(\n      '<iframe frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" src=\"https://www.youtube.com/embed/guJLfqTFfIw?autoplay=1&amp;start=0&amp;null\" title=\"Test Me\"></iframe>'\n    );\n    el.videoId = 'VZ9VSypxhEQ';\n    expect(el.shadowRoot.querySelector('iframe')).to.be.null;\n    el.click();\n    expect(el.shadowRoot.querySelector('iframe')).dom.to.equal(\n      '<iframe frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" src=\"https://www.youtube.com/embed/VZ9VSypxhEQ?autoplay=1&amp;start=0&amp;null\" title=\"Test Me\"></iframe>'\n    );\n  });\n\n  it('switching playlistid should reset iframe', async () => {\n    const el = await fixture<LiteYTEmbed>(baseTemplate);\n    expect(el.shadowRoot.querySelector('iframe')).to.be.null;\n    el.click();\n    expect(el.shadowRoot.querySelector('iframe')).dom.to.equal(\n      '<iframe frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" src=\"https://www.youtube.com/embed/guJLfqTFfIw?autoplay=1&amp;start=0&amp;null\" title=\"Test Me\"></iframe>'\n    );\n    el.playlistId = 'PL-G5r6j4GptH5JTveoLTVqpp7w2oc27Q9';\n    expect(el.shadowRoot.querySelector('iframe')).to.be.null;\n    el.click();\n    expect(el.shadowRoot.querySelector('iframe')).dom.to.equal(\n      '<iframe frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" src=\"https://www.youtube.com/embed/?listType=playlist&amp;list=PL-G5r6j4GptH5JTveoLTVqpp7w2oc27Q9&amp;autoplay=1&amp;start=0&amp;null\" title=\"Test Me\"></iframe>'\n    );\n  });\n\n  it('autoload should inject iframe and warm', async () => {\n    const el = await fixture<LiteYTEmbed>(\n      html`<lite-youtube videoid=\"guJLfqTFfIw\" autoLoad></lite-youtube>`\n    );\n    // this is a cheeky test by counting the test runner + the warm injector\n    // TODO write a better observer\n    expect(document.head.querySelectorAll('link').length).to.be.equal(1);\n  });\n\n  it('nocookie attr should change iframe url target', async () => {\n    const el = await fixture<LiteYTEmbed>(\n      html`<lite-youtube videoid=\"guJLfqTFfIw\" nocookie></lite-youtube>`\n    );\n    el.click();\n    expect(el.shadowRoot.querySelector('iframe')).dom.to.equal(\n      '<iframe frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\" src=\"https://www.youtube-nocookie.com/embed/guJLfqTFfIw?autoplay=1&amp;start=0&amp;null\" title=\"Video\"></iframe>'\n    );\n  });\n\n  it('posterQuality prop should update on set', async () => {\n    const el = await fixture<LiteYTEmbed>(\n      html`<lite-youtube\n        videoid=\"guJLfqTFfIw\"\n        posterQuality=\"mqdefault\"\n      ></lite-youtube>`\n    );\n    expect(el.posterQuality).to.be.equal('mqdefault');\n\n    const fallback = el.shadowRoot?.querySelector<HTMLImageElement>(\n      '#fallbackPlaceholder'\n    );\n    const webp = el.shadowRoot?.querySelector('#webpPlaceholder');\n    const jpeg = el.shadowRoot?.querySelector('#jpegPlaceholder');\n\n    const checkStringOne = 'https://i.ytimg.com/vi/guJLfqTFfIw/mqdefault.jpg';\n\n    expect(fallback?.src).to.be.equal(checkStringOne);\n  });\n\n  it('posterLoading attr default', async () => {\n    const el = await fixture<LiteYTEmbed>(\n      html`<lite-youtube\n        videoid=\"guJLfqTFfIw\"\n        posterQuality=\"mqdefault\"\n      ></lite-youtube>`\n    );\n    expect(el.posterLoading).to.be.equal('lazy');\n\n    const fallback = el.shadowRoot?.querySelector<HTMLImageElement>(\n      '#fallbackPlaceholder'\n    );\n\n    expect(fallback?.loading).to.be.equal('lazy');\n  });\n\n  it('posterLoading attr set should stick to img', async () => {\n    const el = await fixture<LiteYTEmbed>(\n      html`<lite-youtube\n        videoid=\"guJLfqTFfIw\"\n        posterQuality=\"mqdefault\"\n        posterloading=\"eager\"\n      ></lite-youtube>`\n    );\n    expect(el.posterLoading).to.be.equal('eager');\n\n    const fallback = el.shadowRoot?.querySelector<HTMLImageElement>(\n      '#fallbackPlaceholder'\n    );\n\n    expect(fallback?.loading).to.be.equal('eager');\n  });\n\n  it('YouTube Short desktop check', async () => {\n    const el = await fixture<LiteYTEmbed>(\n      html`<lite-youtube videoid=\"guJLfqTFfIw\" short></lite-youtube>`\n    );\n    expect(el['isYouTubeShort']()).to.be.equal(false);\n  });\n\n  it('YouTube Short mobile check', async () => {\n    setViewport({ width: 360, height: 640 });\n    const el = await fixture<LiteYTEmbed>(\n      html`<lite-youtube videoid=\"guJLfqTFfIw\" short></lite-youtube>`\n    );\n    el.click();\n    expect(el['isYouTubeShort']()).to.be.equal(true);\n  });\n\n  it('check for nonce injector', async () => {\n    window.liteYouTubeNonce = 'test-abcd1234';\n    const el = await fixture<LiteYTEmbed>(\n      html`<lite-youtube videoid=\"guJLfqTFfIw\"></lite-youtube>`\n    );\n    expect(\n      el.shadowRoot.querySelector('style')?.getAttribute('nonce')\n    ).to.equal(window.liteYouTubeNonce);\n  });\n\n  it('check global preconnect state', async () => {\n    const el = await fixture<LiteYTEmbed>(\n      html`<lite-youtube videoid=\"guJLfqTFfIw\"></lite-youtube>\n        <lite-youtube videoid=\"guJLfqTFfIw\"></lite-youtube>\n        <lite-youtube videoid=\"guJLfqTFfIw\"></lite-youtube>`\n    );\n    expect(window.liteYouTubeIsPreconnected).to.be.true;\n    expect(\n      document.querySelectorAll('head > link[rel=preconnect]').length\n    ).to.equal(6);\n  });\n\n  it('is valid A11y via aXe', async () => {\n    const el = await fixture<LiteYTEmbed>(baseTemplate);\n    await expect(el).shadowDom.to.be.accessible();\n  });\n});\n"]}